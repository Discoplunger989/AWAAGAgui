-- Awaaga GUI - Fixed Version
-- Wait for game to load
if not game:IsLoaded() then
    game.Loaded:Wait()
end

task.wait(1)

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
repeat task.wait() until player
repeat task.wait() until player.Character

local camera = workspace.CurrentCamera
local ignoredPlayers = {}
local currentTarget = nil
local lockEnabled = false
local currentHighlight = nil
local noclipEnabled = false
local noclipConnection = nil
local airJumpEnabled = false
local invisibleEnabled = false
local espEnabled = false
local espObjects = {}
local antiKnockbackEnabled = false
local antiKnockbackConnection = nil

-- Create GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AwaagaGUI"
screenGui.ResetOnSpawn = false

if gethui then
    screenGui.Parent = gethui()
elseif syn and syn.protect_gui then
    syn.protect_gui(screenGui)
    screenGui.Parent = game:GetService("CoreGui")
else
    screenGui.Parent = game:GetService("CoreGui")
end

print("⚡ Awaaga GUI Loading...")

-- Create main frame (simplified for now)
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 240, 0, 400)
mainFrame.Position = UDim2.new(0, 10, 0.5, -200)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 12)
corner.Parent = mainFrame

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -20, 0, 40)
title.Position = UDim2.new(0, 10, 0, 10)
title.BackgroundTransparency = 1
title.Text = "⚡ Awaaga GUI"
title.TextColor3 = Color3.fromRGB(150, 200, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = mainFrame

-- Create simple buttons
local yPos = 60

local function createButton(text, callback)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, -20, 0, 40)
    btn.Position = UDim2.new(0, 10, 0, yPos)
    btn.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
    btn.Text = text
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 14
    btn.Parent = mainFrame
    
    local btnCorner = Instance.new("UICorner")
    btnCorner.CornerRadius = UDim.new(0, 8)
    btnCorner.Parent = btn
    
    btn.MouseButton1Click:Connect(callback)
    
    yPos = yPos + 50
    return btn
end

-- Core Functions
local function getDistance(targetPlayer)
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return math.huge
    end
    if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return math.huge
    end
    
    local myPos = player.Character.HumanoidRootPart.Position
    local targetPos = targetPlayer.Character.HumanoidRootPart.Position
    return (myPos - targetPos).Magnitude
end

local function findNearestPlayer()
    local nearestPlayer = nil
    local shortestDistance = math.huge
    
    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= player and not ignoredPlayers[otherPlayer.UserId] then
            if otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local humanoid = otherPlayer.Character:FindFirstChild("Humanoid")
                if humanoid and humanoid.Health > 0 then
                    local distance = getDistance(otherPlayer)
                    if distance < shortestDistance then
                        shortestDistance = distance
                        nearestPlayer = otherPlayer
                    end
                end
            end
        end
    end
    
    return nearestPlayer
end

local function updateHighlight(targetPlayer)
    if currentHighlight then
        currentHighlight:Destroy()
        currentHighlight = nil
    end
    
    if targetPlayer and targetPlayer.Character then
        local highlight = Instance.new("Highlight")
        highlight.Adornee = targetPlayer.Character
        highlight.FillColor = Color3.fromRGB(255, 0, 0)
        highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
        highlight.FillTransparency = 0.5
        highlight.OutlineTransparency = 0
        highlight.Parent = targetPlayer.Character
        currentHighlight = highlight
    end
end

local function lockOntoTarget()
    if not lockEnabled or not currentTarget then return end
    
    if currentTarget.Character and currentTarget.Character:FindFirstChild("HumanoidRootPart") then
        local targetPos = currentTarget.Character.HumanoidRootPart.Position
        local headPos = currentTarget.Character:FindFirstChild("Head")
        
        if headPos then
            targetPos = headPos.Position
        end
        
        camera.CFrame = CFrame.new(camera.CFrame.Position, targetPos)
    else
        currentTarget = nil
    end
end

-- Toggle Functions
local lockBtn = createButton("Lock-On: OFF", function()
    lockEnabled = not lockEnabled
    lockBtn.Text = "Lock-On: " .. (lockEnabled and "ON" or "OFF")
    lockBtn.BackgroundColor3 = lockEnabled and Color3.fromRGB(100, 150, 255) or Color3.fromRGB(60, 60, 80)
    
    if not lockEnabled then
        if currentHighlight then
            currentHighlight:Destroy()
            currentHighlight = nil
        end
        currentTarget = nil
    end
end)

local noclipBtn = createButton("Noclip: OFF", function()
    noclipEnabled = not noclipEnabled
    noclipBtn.Text = "Noclip: " .. (noclipEnabled and "ON" or "OFF")
    noclipBtn.BackgroundColor3 = noclipEnabled and Color3.fromRGB(100, 150, 255) or Color3.fromRGB(60, 60, 80)
    
    if noclipEnabled then
        noclipConnection = RunService.Stepped:Connect(function()
            if player.Character then
                for _, part in pairs(player.Character:GetDescendants()) do
                    if part:IsA("BasePart") and part.CanCollide then
                        part.CanCollide = false
                    end
                end
            end
        end)
    else
        if noclipConnection then
            noclipConnection:Disconnect()
            noclipConnection = nil
        end
        
        if player.Character then
            for _, part in pairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    part.CanCollide = true
                end
            end
        end
    end
end)

local airJumpBtn = createButton("Air Jump: OFF", function()
    airJumpEnabled = not airJumpEnabled
    airJumpBtn.Text = "Air Jump: " .. (airJumpEnabled and "ON" or "OFF")
    airJumpBtn.BackgroundColor3 = airJumpEnabled and Color3.fromRGB(100, 150, 255) or Color3.fromRGB(60, 60, 80)
end)

local antiKBBtn = createButton("Anti-Knockback: OFF", function()
    antiKnockbackEnabled = not antiKnockbackEnabled
    antiKBBtn.Text = "Anti-Knockback: " .. (antiKnockbackEnabled and "ON" or "OFF")
    antiKBBtn.BackgroundColor3 = antiKnockbackEnabled and Color3.fromRGB(100, 150, 255) or Color3.fromRGB(60, 60, 80)
    
    if antiKnockbackEnabled then
        if antiKnockbackConnection then
            antiKnockbackConnection:Disconnect()
        end
        
        antiKnockbackConnection = RunService.Heartbeat:Connect(function()
            if antiKnockbackEnabled and player.Character then
                local hrp = player.Character:FindFirstChild("HumanoidRootPart")
                if hrp then
                    local vel = hrp.AssemblyLinearVelocity
                    if vel.Magnitude > 50 then
                        hrp.AssemblyLinearVelocity = Vector3.new(vel.X * 0.1, vel.Y * 0.5, vel.Z * 0.1)
                    end
                end
            end
        end)
    else
        if antiKnockbackConnection then
            antiKnockbackConnection:Disconnect()
            antiKnockbackConnection = nil
        end
    end
end)

createButton("Reset Ignored", function()
    ignoredPlayers = {}
    print("Ignored players cleared!")
end)

createButton("Close GUI", function()
    screenGui:Destroy()
    if noclipConnection then noclipConnection:Disconnect() end
    if antiKnockbackConnection then antiKnockbackConnection:Disconnect() end
    print("⚡ Awaaga GUI Unloaded!")
end)

-- Key Press Handler
UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    
    if input.KeyCode == Enum.KeyCode.X then
        if currentTarget and lockEnabled then
            ignoredPlayers[currentTarget.UserId] = true
            
            if currentHighlight then
                currentHighlight:Destroy()
                currentHighlight = nil
            end
            
            currentTarget = nil
            print("Player ignored!")
        end
    end
end)

-- Air Jump Handler
UserInputService.JumpRequest:Connect(function()
    if airJumpEnabled and player.Character then
        local humanoid = player.Character:FindFirstChild("Humanoid")
        if humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)

-- Main Loop
RunService.RenderStepped:Connect(function()
    if not lockEnabled then return end
    
    local previousTarget = currentTarget
    
    if not currentTarget or not currentTarget.Character or not currentTarget.Character:FindFirstChild("HumanoidRootPart") then
        currentTarget = findNearestPlayer()
    end
    
    local nearest = findNearestPlayer()
    if nearest and nearest ~= currentTarget then
        local currentDist = currentTarget and getDistance(currentTarget) or math.huge
        local nearestDist = getDistance(nearest)
        
        if nearestDist < currentDist then
            currentTarget = nearest
        end
    end
    
    if currentTarget ~= previousTarget then
        updateHighlight(currentTarget)
    end
    
    lockOntoTarget()
end)

-- Character Respawn Handler
player.CharacterAdded:Connect(function(character)
    task.wait(0.1)
    
    if noclipEnabled and noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = RunService.Stepped:Connect(function()
            if player.Character then
                for _, part in pairs(player.Character:GetDescendants()) do
                    if part:IsA("BasePart") and part.CanCollide then
                        part.CanCollide = false
                    end
                end
            end
        end)
    end
    
    if antiKnockbackEnabled and antiKnockbackConnection then
        antiKnockbackConnection:Disconnect()
        antiKnockbackConnection = RunService.Heartbeat:Connect(function()
            if antiKnockbackEnabled and player.Character then
                local hrp = player.Character:FindFirstChild("HumanoidRootPart")
                if hrp then
                    local vel = hrp.AssemblyLinearVelocity
                    if vel.Magnitude > 50 then
                        hrp.AssemblyLinearVelocity = Vector3.new(vel.X * 0.1, vel.Y * 0.5, vel.Z * 0.1)
                    end
                end
            end
        end)
    end
end)

print("⚡ Awaaga GUI Loaded Successfully!")
print("Press X to ignore current target")
