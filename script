-- Awaaga GUI - Full Featured Version
-- Wait for game to load
if not game:IsLoaded() then
    game.Loaded:Wait()
end

task.wait(1)

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
repeat task.wait() until player
repeat task.wait() until player.Character

local camera = workspace.CurrentCamera
local ignoredPlayers = {}
local currentTarget = nil
local lockEnabled = false
local currentHighlight = nil
local noclipEnabled = false
local noclipConnection = nil
local airJumpEnabled = false
local invisibleEnabled = false
local espEnabled = false
local espObjects = {}
local antiKnockbackEnabled = false
local antiKnockbackConnection = nil
local currentTab = "Player"

-- Create GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AwaagaGUI"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Protect GUI
if gethui then
    screenGui.Parent = gethui()
elseif syn and syn.protect_gui then
    syn.protect_gui(screenGui)
    screenGui.Parent = game:GetService("CoreGui")
else
    screenGui.Parent = game:GetService("CoreGui")
end

-- Loading Screen
local loadingFrame = Instance.new("Frame")
loadingFrame.Size = UDim2.new(0, 300, 0, 200)
loadingFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
loadingFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
loadingFrame.BorderSizePixel = 0
loadingFrame.ZIndex = 100
loadingFrame.Parent = screenGui

local loadingCorner = Instance.new("UICorner")
loadingCorner.CornerRadius = UDim.new(0, 12)
loadingCorner.Parent = loadingFrame

local loadingStroke = Instance.new("UIStroke")
loadingStroke.Color = Color3.fromRGB(100, 150, 255)
loadingStroke.Thickness = 2
loadingStroke.Transparency = 0.5
loadingStroke.Parent = loadingFrame

local loadingTitle = Instance.new("TextLabel")
loadingTitle.Size = UDim2.new(1, -40, 0, 50)
loadingTitle.Position = UDim2.new(0, 20, 0, 20)
loadingTitle.BackgroundTransparency = 1
loadingTitle.Text = "⚡ Awaaga GUI"
loadingTitle.TextColor3 = Color3.fromRGB(150, 200, 255)
loadingTitle.Font = Enum.Font.GothamBold
loadingTitle.TextSize = 24
loadingTitle.ZIndex = 101
loadingTitle.Parent = loadingFrame

local loadingStatus = Instance.new("TextLabel")
loadingStatus.Size = UDim2.new(1, -40, 0, 30)
loadingStatus.Position = UDim2.new(0, 20, 0, 80)
loadingStatus.BackgroundTransparency = 1
loadingStatus.Text = "Initializing..."
loadingStatus.TextColor3 = Color3.fromRGB(180, 180, 200)
loadingStatus.Font = Enum.Font.Gotham
loadingStatus.TextSize = 14
loadingStatus.ZIndex = 101
loadingStatus.Parent = loadingFrame

local loadingBarBackground = Instance.new("Frame")
loadingBarBackground.Size = UDim2.new(1, -40, 0, 8)
loadingBarBackground.Position = UDim2.new(0, 20, 0, 130)
loadingBarBackground.BackgroundColor3 = Color3.fromRGB(40, 40, 55)
loadingBarBackground.BorderSizePixel = 0
loadingBarBackground.ZIndex = 101
loadingBarBackground.Parent = loadingFrame

local loadingBarCorner = Instance.new("UICorner")
loadingBarCorner.CornerRadius = UDim.new(0, 4)
loadingBarCorner.Parent = loadingBarBackground

local loadingBar = Instance.new("Frame")
loadingBar.Size = UDim2.new(0, 0, 1, 0)
loadingBar.BackgroundColor3 = Color3.fromRGB(100, 150, 255)
loadingBar.BorderSizePixel = 0
loadingBar.ZIndex = 102
loadingBar.Parent = loadingBarBackground

local loadingBarCorner2 = Instance.new("UICorner")
loadingBarCorner2.CornerRadius = UDim.new(0, 4)
loadingBarCorner2.Parent = loadingBar

local loadingPercentage = Instance.new("TextLabel")
loadingPercentage.Size = UDim2.new(1, -40, 0, 30)
loadingPercentage.Position = UDim2.new(0, 20, 0, 150)
loadingPercentage.BackgroundTransparency = 1
loadingPercentage.Text = "0%"
loadingPercentage.TextColor3 = Color3.fromRGB(150, 150, 170)
loadingPercentage.Font = Enum.Font.GothamBold
loadingPercentage.TextSize = 16
loadingPercentage.ZIndex = 101
loadingPercentage.Parent = loadingFrame

-- Animate loading stroke
local loadingGlowActive = true
spawn(function()
    while loadingGlowActive do
        if not loadingStroke or not loadingStroke.Parent then break end
        local tweenInfo = TweenInfo.new(1.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)
        local tween1 = TweenService:Create(loadingStroke, tweenInfo, {Transparency = 0.2})
        tween1:Play()
        tween1.Completed:Wait()
        
        if not loadingGlowActive then break end
        
        local tween2 = TweenService:Create(loadingStroke, tweenInfo, {Transparency = 0.7})
        tween2:Play()
        tween2.Completed:Wait()
    end
end)

-- Loading function
local function updateLoading(progress, status)
    loadingStatus.Text = status
    loadingPercentage.Text = math.floor(progress) .. "%"
    
    local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = TweenService:Create(loadingBar, tweenInfo, {Size = UDim2.new(progress / 100, 0, 1, 0)})
    tween:Play()
end

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 240, 0, 450)
mainFrame.Position = UDim2.new(0, -250, 0.5, -225)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
mainFrame.BorderSizePixel = 0
mainFrame.ClipsDescendants = true
mainFrame.Parent = screenGui

local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 12)
mainCorner.Parent = mainFrame

-- Gradient Background
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(35, 35, 50)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(25, 25, 35))
}
gradient.Rotation = 45
gradient.Parent = mainFrame

-- Border Glow
local borderGlow = Instance.new("UIStroke")
borderGlow.Color = Color3.fromRGB(100, 150, 255)
borderGlow.Thickness = 2
borderGlow.Transparency = 0.5
borderGlow.Parent = mainFrame

-- Title Bar
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 50)
titleBar.BackgroundColor3 = Color3.fromRGB(45, 45, 65)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 12)
titleCorner.Parent = titleBar

-- Title Text
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -60, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.BackgroundTransparency = 1
title.Text = "⚡ Awaaga GUI"
title.TextColor3 = Color3.fromRGB(150, 200, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = titleBar

-- Version Label
local versionLabel = Instance.new("TextLabel")
versionLabel.Size = UDim2.new(0, 50, 0, 15)
versionLabel.Position = UDim2.new(1, -95, 0, 5)
versionLabel.BackgroundTransparency = 1
versionLabel.Text = "v1.2"
versionLabel.TextColor3 = Color3.fromRGB(100, 100, 120)
versionLabel.Font = Enum.Font.Gotham
versionLabel.TextSize = 10
versionLabel.Parent = titleBar

-- Close Button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 40, 0, 40)
closeButton.Position = UDim2.new(1, -45, 0, 5)
closeButton.BackgroundColor3 = Color3.fromRGB(180, 50, 50)
closeButton.BorderSizePixel = 0
closeButton.Text = "✕"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.Font = Enum.Font.GothamBold
closeButton.TextSize = 20
closeButton.AutoButtonColor = false
closeButton.Parent = titleBar

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 8)
closeCorner.Parent = closeButton

-- Tab Container
local tabContainer = Instance.new("Frame")
tabContainer.Size = UDim2.new(1, -30, 0, 40)
tabContainer.Position = UDim2.new(0, 15, 0, 65)
tabContainer.BackgroundTransparency = 1
tabContainer.Parent = mainFrame

-- Player Tab
local playerTab = Instance.new("TextButton")
playerTab.Size = UDim2.new(0.48, 0, 1, 0)
playerTab.Position = UDim2.new(0, 0, 0, 0)
playerTab.BackgroundColor3 = Color3.fromRGB(100, 150, 255)
playerTab.BorderSizePixel = 0
playerTab.Text = "Player"
playerTab.TextColor3 = Color3.fromRGB(255, 255, 255)
playerTab.Font = Enum.Font.GothamBold
playerTab.TextSize = 14
playerTab.AutoButtonColor = false
playerTab.Parent = tabContainer

local playerTabCorner = Instance.new("UICorner")
playerTabCorner.CornerRadius = UDim.new(0, 8)
playerTabCorner.Parent = playerTab

-- Visual Tab
local visualTab = Instance.new("TextButton")
visualTab.Size = UDim2.new(0.48, 0, 1, 0)
visualTab.Position = UDim2.new(0.52, 0, 0, 0)
visualTab.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
visualTab.BorderSizePixel = 0
visualTab.Text = "Visual"
visualTab.TextColor3 = Color3.fromRGB(255, 255, 255)
visualTab.Font = Enum.Font.GothamBold
visualTab.TextSize = 14
visualTab.AutoButtonColor = false
visualTab.Parent = tabContainer

local visualTabCorner = Instance.new("UICorner")
visualTabCorner.CornerRadius = UDim.new(0, 8)
visualTabCorner.Parent = visualTab

-- Content Frame
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, -30, 1, -190)
contentFrame.Position = UDim2.new(0, 15, 0, 120)
contentFrame.BackgroundTransparency = 1
contentFrame.ClipsDescendants = true
contentFrame.Parent = mainFrame

-- Player Content
local playerContent = Instance.new("Frame")
playerContent.Size = UDim2.new(1, 0, 1, 0)
playerContent.BackgroundTransparency = 1
playerContent.Visible = true
playerContent.Parent = contentFrame

-- Visual Content
local visualContent = Instance.new("Frame")
visualContent.Size = UDim2.new(1, 0, 1, 0)
visualContent.BackgroundTransparency = 1
visualContent.Visible = false
visualContent.Parent = contentFrame

-- Confirmation Dialog
local confirmFrame = Instance.new("Frame")
confirmFrame.Size = UDim2.new(0, 250, 0, 150)
confirmFrame.Position = UDim2.new(0.5, -125, 0.5, -75)
confirmFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
confirmFrame.BorderSizePixel = 0
confirmFrame.Visible = false
confirmFrame.ZIndex = 10
confirmFrame.Parent = screenGui

local confirmCorner = Instance.new("UICorner")
confirmCorner.CornerRadius = UDim.new(0, 12)
confirmCorner.Parent = confirmFrame

local confirmStroke = Instance.new("UIStroke")
confirmStroke.Color = Color3.fromRGB(100, 150, 255)
confirmStroke.Thickness = 2
confirmStroke.Parent = confirmFrame

local confirmTitle = Instance.new("TextLabel")
confirmTitle.Size = UDim2.new(1, -20, 0, 40)
confirmTitle.Position = UDim2.new(0, 10, 0, 10)
confirmTitle.BackgroundTransparency = 1
confirmTitle.Text = "⚠️ Unload GUI?"
confirmTitle.TextColor3 = Color3.fromRGB(255, 200, 100)
confirmTitle.Font = Enum.Font.GothamBold
confirmTitle.TextSize = 18
confirmTitle.ZIndex = 11
confirmTitle.Parent = confirmFrame

local confirmText = Instance.new("TextLabel")
confirmText.Size = UDim2.new(1, -20, 0, 30)
confirmText.Position = UDim2.new(0, 10, 0, 50)
confirmText.BackgroundTransparency = 1
confirmText.Text = "Are you sure you want to\nunload the GUI?"
confirmText.TextColor3 = Color3.fromRGB(200, 200, 200)
confirmText.Font = Enum.Font.Gotham
confirmText.TextSize = 12
confirmText.ZIndex = 11
confirmText.Parent = confirmFrame

local confirmYes = Instance.new("TextButton")
confirmYes.Size = UDim2.new(0, 100, 0, 35)
confirmYes.Position = UDim2.new(0, 15, 1, -45)
confirmYes.BackgroundColor3 = Color3.fromRGB(180, 50, 50)
confirmYes.BorderSizePixel = 0
confirmYes.Text = "Yes"
confirmYes.TextColor3 = Color3.fromRGB(255, 255, 255)
confirmYes.Font = Enum.Font.GothamBold
confirmYes.TextSize = 14
confirmYes.ZIndex = 11
confirmYes.Parent = confirmFrame

local yesCorner = Instance.new("UICorner")
yesCorner.CornerRadius = UDim.new(0, 8)
yesCorner.Parent = confirmYes

local confirmNo = Instance.new("TextButton")
confirmNo.Size = UDim2.new(0, 100, 0, 35)
confirmNo.Position = UDim2.new(1, -115, 1, -45)
confirmNo.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
confirmNo.BorderSizePixel = 0
confirmNo.Text = "No"
confirmNo.TextColor3 = Color3.fromRGB(255, 255, 255)
confirmNo.Font = Enum.Font.GothamBold
confirmNo.TextSize = 14
confirmNo.ZIndex = 11
confirmNo.Parent = confirmFrame

local noCorner = Instance.new("UICorner")
noCorner.CornerRadius = UDim.new(0, 8)
noCorner.Parent = confirmNo

-- Dragging
local dragging = false
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    local newPosition = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    
    local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = TweenService:Create(mainFrame, tweenInfo, {Position = newPosition})
    tween:Play()
end

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Tooltip
local tooltip = Instance.new("Frame")
tooltip.Size = UDim2.new(0, 200, 0, 50)
tooltip.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
tooltip.BorderSizePixel = 0
tooltip.Visible = false
tooltip.ZIndex = 200
tooltip.Parent = screenGui

local tooltipCorner = Instance.new("UICorner")
tooltipCorner.CornerRadius = UDim.new(0, 8)
tooltipCorner.Parent = tooltip

local tooltipStroke = Instance.new("UIStroke")
tooltipStroke.Color = Color3.fromRGB(100, 150, 255)
tooltipStroke.Thickness = 1
tooltipStroke.Parent = tooltip

local tooltipText = Instance.new("TextLabel")
tooltipText.Size = UDim2.new(1, -16, 1, -16)
tooltipText.Position = UDim2.new(0, 8, 0, 8)
tooltipText.BackgroundTransparency = 1
tooltipText.Text = ""
tooltipText.TextColor3 = Color3.fromRGB(220, 220, 240)
tooltipText.Font = Enum.Font.Gotham
tooltipText.TextSize = 12
tooltipText.TextWrapped = true
tooltipText.TextXAlignment = Enum.TextXAlignment.Left
tooltipText.TextYAlignment = Enum.TextYAlignment.Top
tooltipText.ZIndex = 201
tooltipText.Parent = tooltip

-- Status Label
local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(1, -30, 0, 50)
statusLabel.Position = UDim2.new(0, 15, 1, -60)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "System Ready"
statusLabel.TextColor3 = Color3.fromRGB(150, 150, 170)
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextSize = 11
statusLabel.TextXAlignment = Enum.TextXAlignment.Left
statusLabel.TextWrapped = true
statusLabel.Parent = mainFrame

-- Tooltip functions
local function showTooltip(button, description)
    tooltipText.Text = description
    tooltip.Visible = true
    
    local buttonPos = button.AbsolutePosition
    local buttonSize = button.AbsoluteSize
    
    tooltip.Position = UDim2.new(0, buttonPos.X + buttonSize.X + 10, 0, buttonPos.Y)
end

local function hideTooltip()
    tooltip.Visible = false
end

-- Create switch function
local function createSwitch(parent, position, labelText, description)
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, 0, 0, 42)
    container.Position = position
    container.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
    container.BorderSizePixel = 0
    container.Parent = parent
    
    local containerCorner = Instance.new("UICorner")
    containerCorner.CornerRadius = UDim.new(0, 8)
    containerCorner.Parent = container
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -70, 1, 0)
    label.Position = UDim2.new(0, 12, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = labelText
    label.TextColor3 = Color3.fromRGB(220, 220, 240)
    label.Font = Enum.Font.GothamBold
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = container
    
    local switchButton = Instance.new("TextButton")
    switchButton.Size = UDim2.new(0, 50, 0, 26)
    switchButton.Position = UDim2.new(1, -60, 0.5, -13)
    switchButton.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
    switchButton.BorderSizePixel = 0
    switchButton.Text = ""
    switchButton.AutoButtonColor = false
    switchButton.ZIndex = 2
    switchButton.Parent = container
    
    local switchCorner = Instance.new("UICorner")
    switchCorner.CornerRadius = UDim.new(1, 0)
    switchCorner.Parent = switchButton
    
    local switchCircle = Instance.new("Frame")
    switchCircle.Size = UDim2.new(0, 20, 0, 20)
    switchCircle.Position = UDim2.new(0, 3, 0.5, -10)
    switchCircle.BackgroundColor3 = Color3.fromRGB(200, 200, 220)
    switchCircle.BorderSizePixel = 0
    switchCircle.ZIndex = 3
    switchCircle.Parent = switchButton
    
    local circleCorner = Instance.new("UICorner")
    circleCorner.CornerRadius = UDim.new(1, 0)
    circleCorner.Parent = switchCircle
    
    local clickButton = Instance.new("TextButton")
    clickButton.Size = UDim2.new(1, 0, 1, 0)
    clickButton.BackgroundTransparency = 1
    clickButton.Text = ""
    clickButton.ZIndex = 1
    clickButton.Parent = container
    
    clickButton.MouseEnter:Connect(function()
        showTooltip(container, description)
        TweenService:Create(container, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(40, 40, 55)}):Play()
    end)
    
    clickButton.MouseLeave:Connect(function()
        hideTooltip()
        TweenService:Create(container, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(35, 35, 50)}):Play()
    end)
    
    return {
        container = container,
        button = switchButton,
        circle = switchCircle,
        label = label,
        clickButton = clickButton
    }
end

-- Create switches
local lockOnSwitch = createSwitch(playerContent, UDim2.new(0, 0, 0, 0), "Lock-On", "Automatically aims camera at nearest player. Press X to ignore current target.")
local noclipSwitch = createSwitch(playerContent, UDim2.new(0, 0, 0, 54), "Noclip", "Walk through walls and objects without collision.")
local airJumpSwitch = createSwitch(playerContent, UDim2.new(0, 0, 0, 108), "Air Jump", "Jump infinitely in the air without touching the ground.")
local antiKnockbackSwitch = createSwitch(playerContent, UDim2.new(0, 0, 0, 162), "Anti-Knockback", "Reduces knockback when taking damage from attacks.")

-- Reset button
local resetIgnoredButton = Instance.new("TextButton")
resetIgnoredButton.Size = UDim2.new(1, 0, 0, 42)
resetIgnoredButton.Position = UDim2.new(0, 0, 0, 216)
resetIgnoredButton.BackgroundColor3 = Color3.fromRGB(100, 100, 180)
resetIgnoredButton.BorderSizePixel = 0
resetIgnoredButton.Text = "Reset Ignored Players"
resetIgnoredButton.TextColor3 = Color3.fromRGB(255, 255, 255)
resetIgnoredButton.Font = Enum.Font.GothamBold
resetIgnoredButton.TextSize = 14
resetIgnoredButton.AutoButtonColor = false
resetIgnoredButton.Parent = playerContent

local buttonCorner5 = Instance.new("UICorner")
buttonCorner5.CornerRadius = UDim.new(0, 8)
buttonCorner5.Parent = resetIgnoredButton

resetIgnoredButton.MouseEnter:Connect(function()
    showTooltip(resetIgnoredButton, "Clear the list of ignored players for lock-on targeting.")
    TweenService:Create(resetIgnoredButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(120, 120, 200)}):Play()
end)

resetIgnoredButton.MouseLeave:Connect(function()
    hideTooltip()
    TweenService:Create(resetIgnoredButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(100, 100, 180)}):Play()
end)

-- Visual switches
local invisibleSwitch = createSwitch(visualContent, UDim2.new(0, 0, 0, 0), "Invisible", "Makes your character invisible on YOUR screen only. Other players can still see you!")
local espSwitch = createSwitch(visualContent, UDim2.new(0, 0, 0, 54), "ESP", "See all players through walls with names and distance indicators.")

-- Animation functions
local function animateSwitch(switchData, enabled)
    local targetBgColor = enabled and Color3.fromRGB(100, 150, 255) or Color3.fromRGB(60, 60, 80)
    local targetPosition = enabled and UDim2.new(1, -23, 0.5, -10) or UDim2.new(0, 3, 0.5, -10)
    
    local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    TweenService:Create(switchData.button, tweenInfo, {BackgroundColor3 = targetBgColor}):Play()
    TweenService:Create(switchData.circle, tweenInfo, {Position = targetPosition}):Play()
end

local function slideIn()
    local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out)
    TweenService:Create(mainFrame, tweenInfo, {Position = UDim2.new(0, 10, 0.5, -225)}):Play()
end

-- Tab switching
local function switchTab(tabName)
    currentTab = tabName
    
    if tabName == "Player" then
        playerContent.Visible = true
        visualContent.Visible = false
        
        local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        TweenService:Create(playerTab, tweenInfo, {BackgroundColor3 = Color3.fromRGB(100, 150, 255)}):Play()
        TweenService:Create(visualTab, tweenInfo, {BackgroundColor3 = Color3.fromRGB(60, 60, 80)}):Play()
    elseif tabName == "Visual" then
        playerContent.Visible = false
        visualContent.Visible = true
        
        local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        TweenService:Create(playerTab, tweenInfo, {BackgroundColor3 = Color3.fromRGB(60, 60, 80)}):Play()
        TweenService:Create(visualTab, tweenInfo, {BackgroundColor3 = Color3.fromRGB(100, 150, 255)}):Play()
    end
end

-- Border glow animation
spawn(function()
    while borderGlow and borderGlow.Parent do
        local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)
        local tween1 = TweenService:Create(borderGlow, tweenInfo, {Transparency = 0.2})
        tween1:Play()
        tween1.Completed:Wait()
        
        if not borderGlow or not borderGlow.Parent then break end
        
        local tween2 = TweenService:Create(borderGlow, tweenInfo, {Transparency = 0.7})
        tween2:Play()
        tween2.Completed:Wait()
    end
end)

-- Loading GUI
local function loadGUI()
    updateLoading(0, "Initializing...")
    task.wait(0.3)
    
    updateLoading(20, "Loading Player Features...")
    task.wait(0.4)
    
    updateLoading(40, "Loading Visual Features...")
    task.wait(0.4)
    
    updateLoading(60, "Setting up UI Components...")
    task.wait(0.3)
    
    updateLoading(80, "Finalizing...")
    task.wait(0.3)
    
    updateLoading(100, "Complete!")
    task.wait(0.5)
    
    loadingGlowActive = false
    
    local fadeInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    
    for _, child in pairs(loadingFrame:GetDescendants()) do
        if child:IsA("GuiObject") then
            if child:IsA("TextLabel") then
                TweenService:Create(child, fadeInfo, {TextTransparency = 1}):Play()
            end
            if child.ClassName ~= "UICorner" and child.ClassName ~= "UIStroke" then
                TweenService:Create(child, fadeInfo, {BackgroundTransparency = 1}):Play()
            end
        end
    end
    
    TweenService:Create(loadingFrame, fadeInfo, {BackgroundTransparency = 1}):Play()
    TweenService:Create(loadingStroke, fadeInfo, {Transparency = 1}):Play()
    
    task.wait(0.5)
    loadingFrame:Destroy()
    
    slideIn()
end

task.spawn(loadGUI)

-- Core Functions
local function getDistance(targetPlayer)
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return math.huge
    end
    if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return math.huge
    end
    
    local myPos = player.Character.HumanoidRootPart.Position
    local targetPos = targetPlayer.Character.HumanoidRootPart.Position
    return (myPos - targetPos).Magnitude
end

local function findNearestPlayer()
    local nearestPlayer = nil
    local shortestDistance = math.huge
    
    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= player and not ignoredPlayers[otherPlayer.UserId] then
            if otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local humanoid = otherPlayer.Character:FindFirstChild("Humanoid")
                if humanoid and humanoid.Health > 0 then
                    local distance = getDistance(otherPlayer)
                    if distance < shortestDistance then
                        shortestDistance = distance
                        nearestPlayer = otherPlayer
                    end
                end
            end
        end
    end
    
    return nearestPlayer
end

local function updateHighlight(targetPlayer)
    if currentHighlight then
        currentHighlight:Destroy()
        currentHighlight = nil
    end
    
    if targetPlayer and targetPlayer.Character then
        local highlight = Instance.new("Highlight")
        highlight.Adornee = targetPlayer.Character
        highlight.FillColor = Color3.fromRGB(255, 0, 0)
        highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
        highlight.FillTransparency = 0.5
        highlight.OutlineTransparency = 0
        highlight.Parent = targetPlayer.Character
        currentHighlight = highlight
    end
end

local function lockOntoTarget()
    if not lockEnabled or not currentTarget then return end
    
    if currentTarget.Character and currentTarget.Character:FindFirstChild("HumanoidRootPart") then
        local targetPos = currentTarget.Character.HumanoidRootPart.Position
        local headPos = currentTarget.Character:FindFirstChild("Head")
        
        if headPos then
            targetPos = headPos.Position
        end
        
        camera.CFrame = CFrame.new(camera.CFrame.Position, targetPos)
    else
        currentTarget = nil
    end
end

local function updateStatus()
    if not lockEnabled then
        statusLabel.Text = "🔴 System Disabled"
    elseif currentTarget then
        local distance = math.floor(getDistance(currentTarget))
        statusLabel.Text = "🎯 " .. currentTarget.Name .. " (" .. distance .. "m)"
    else
        statusLabel.Text = "⚠️ No Target Found"
    end
end

local function toggleNoclip()
    noclipEnabled = not noclipEnabled
    animateSwitch(noclipSwitch, noclipEnabled)
    
    if noclipEnabled then
        noclipConnection = RunService.Stepped:Connect(function()
            if player.Character then
                for _, part in pairs(player.Character:GetDescendants()) do
                    if part:IsA("BasePart") and part.CanCollide then
                        part.CanCollide = false
                    end
                end
            end
        end)
    else
        if noclipConnection then
            noclipConnection:Disconnect()
            noclipConnection = nil
        end
        
        if player.Character then
            for _, part in pairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    part.CanCollide = true
                end
            end
        end
    end
end

local function toggleAirJump()
    airJumpEnabled = not airJumpEnabled
    animateSwitch(airJumpSwitch, airJumpEnabled)
end

local function toggleInvisible()
    invisibleEnabled = not invisibleEnabled
    animateSwitch(invisibleSwitch, invisibleEnabled)
    
    if invisibleEnabled then
        statusLabel.Text = "⚠️ Note: Invisible is client-side only. Other players can still see you."
        statusLabel.TextColor3 = Color3.fromRGB(255, 200, 100)
        
        if player.Character then
            for _, part in pairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Transparency = 1
                elseif part:IsA("Decal") or part:IsA("Texture") then
                    part.Transparency = 1
                end
            end
            
            for _, accessory in pairs(player.Character:GetChildren()) do
                if accessory:IsA("Accessory") then
                    local handle = accessory:FindFirstChild("Handle")
                    if handle then
                        handle.Transparency = 1
                    end
                end
            end
        end
    else
        statusLabel.Text = "System Ready"
        statusLabel.TextColor3 = Color3.fromRGB(150, 150, 170)
        
        if player.Character then
            for _, part in pairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    part.Transparency = 0
                elseif part:IsA("Decal") or part:IsA("Texture") then
                    part.Transparency = 0
                end
            end
            
            local head = player.Character:FindFirstChild("Head")
            if head then
                head.Transparency = 0
            end
            
            for _, accessory in pairs(player.Character:GetChildren()) do
                if accessory:IsA("Accessory") then
                    local handle = accessory:FindFirstChild("Handle")
                    if handle then
                        handle.Transparency = 0
                    end
                end
            end
        end
    end
end

-- ESP Functions
local function createESP(targetPlayer)
    if espObjects[targetPlayer] then return end
    
    local espFolder = Instance.new("Folder")
    espFolder.Name = "ESP_" .. targetPlayer.Name
    espFolder.Parent = screenGui
    
    espObjects[targetPlayer] = espFolder
    
    local function updateESP()
        if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            return
        end
        
        espFolder:ClearAllChildren()
        
        local highlight = Instance.new("Highlight")
        highlight.Adornee = targetPlayer.Character
        highlight.FillColor = Color3.fromRGB(255, 100, 100)
        highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
        highlight.FillTransparency = 0.7
        highlight.OutlineTransparency = 0.3
        highlight.Parent = espFolder
        
        local billboard = Instance.new("BillboardGui")
        billboard.Adornee = targetPlayer.Character:FindFirstChild("Head")
        billboard.Size = UDim2.new(0, 200, 0, 50)
        billboard.StudsOffset = Vector3.new(0, 2, 0)
        billboard.AlwaysOnTop = true
        billboard.Parent = espFolder
        
        local nameLabel = Instance.new("TextLabel")
        nameLabel.Size = UDim2.new(1, 0, 1, 0)
        nameLabel.BackgroundTransparency = 1
        nameLabel.Text = targetPlayer.Name
        nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        nameLabel.Font = Enum.Font.GothamBold
        nameLabel.TextSize = 16
        nameLabel.TextStrokeTransparency = 0.5
        nameLabel.Parent = billboard
        
        local distanceLabel = Instance.new("TextLabel")
        distanceLabel.Size = UDim2.new(1, 0, 0.4, 0)
        distanceLabel.Position = UDim2.new(0, 0, 0.6, 0)
        distanceLabel.BackgroundTransparency = 1
        distanceLabel.Text = ""
        distanceLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
        distanceLabel.Font = Enum.Font.Gotham
        distanceLabel.TextSize = 12
        distanceLabel.TextStrokeTransparency = 0.5
        distanceLabel.Parent = billboard
        
        RunService.RenderStepped:Connect(function()
            if not espEnabled or not targetPlayer.Character then return end
            local dist = getDistance(targetPlayer)
            if dist ~= math.huge then
                distanceLabel.Text = math.floor(dist) .. "m"
            end
        end)
    end
    
    updateESP()
    
    targetPlayer.CharacterAdded:Connect(function()
        task.wait(0.5)
        if espEnabled then
            updateESP()
        end
    end)
end

local function removeESP(targetPlayer)
    if espObjects[targetPlayer] then
        espObjects[targetPlayer]:Destroy()
        espObjects[targetPlayer] = nil
    end
end

local function toggleESP()
    espEnabled = not espEnabled
    animateSwitch(espSwitch, espEnabled)
    
    if espEnabled then
        for _, otherPlayer in pairs(Players:GetPlayers()) do
            if otherPlayer ~= player then
                createESP(otherPlayer)
            end
        end
        
        Players.PlayerAdded:Connect(function(newPlayer)
            if espEnabled and newPlayer ~= player then
                newPlayer.CharacterAdded:Wait()
                task.wait(0.5)
                createESP(newPlayer)
            end
        end)
    else
        for targetPlayer, _ in pairs(espObjects) do
            removeESP(targetPlayer)
        end
    end
end

local function toggleAntiKnockback()
    antiKnockbackEnabled = not antiKnockbackEnabled
    animateSwitch(antiKnockbackSwitch, antiKnockbackEnabled)
    
    if antiKnockbackEnabled then
        if antiKnockbackConnection then
            antiKnockbackConnection:Disconnect()
        end
        
        antiKnockbackConnection = RunService.Heartbeat:Connect(function()
            if antiKnockbackEnabled and player.Character then
                local hrp = player.Character:FindFirstChild("HumanoidRootPart")
                if hrp then
                    local vel = hrp.AssemblyLinearVelocity
                    if vel.Magnitude > 50 then
                        hrp.AssemblyLinearVelocity = Vector3.new(vel.X * 0.1, vel.Y * 0.5, vel.Z * 0.1)
                    end
                end
            end
        end)
    else
        if antiKnockbackConnection then
            antiKnockbackConnection:Disconnect()
            antiKnockbackConnection = nil
        end
    end
end

local function resetIgnoredPlayers()
    ignoredPlayers = {}
    statusLabel.Text = "✅ Ignored players list cleared!"
    statusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
    
    task.wait(2)
    if not invisibleEnabled then
        statusLabel.Text = "System Ready"
        statusLabel.TextColor3 = Color3.fromRGB(150, 150, 170)
    end
end

local function unloadGUI()
    if noclipConnection then
        noclipConnection:Disconnect()
    end
    
    if currentHighlight then
        currentHighlight:Destroy()
    end
    
    for targetPlayer, _ in pairs(espObjects) do
        removeESP(targetPlayer)
    end
    
    if invisibleEnabled and player.Character then
        for _, part in pairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                part.Transparency = 0
            elseif part:IsA("Decal") or part:IsA("Texture") then
                part.Transparency = 0
            end
        end
        
        for _, accessory in pairs(player.Character:GetChildren()) do
            if accessory:IsA("Accessory") then
                local handle = accessory:FindFirstChild("Handle")
                if handle then
                    handle.Transparency = 0
                end
            end
        end
    end
    
    if noclipEnabled and player.Character then
        for _, part in pairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                part.CanCollide = true
            end
        end
    end
    
    screenGui:Destroy()
    print("⚡ Awaaga GUI Unloaded!")
end

-- Button Connections
playerTab.MouseButton1Click:Connect(function()
    switchTab("Player")
end)

visualTab.MouseButton1Click:Connect(function()
    switchTab("Visual")
end)

lockOnSwitch.clickButton.MouseButton1Click:Connect(function()
    lockEnabled = not lockEnabled
    animateSwitch(lockOnSwitch, lockEnabled)
    
    if not lockEnabled then
        if currentHighlight then
            currentHighlight:Destroy()
            currentHighlight = nil
        end
        currentTarget = nil
    end
    
    updateStatus()
end)

noclipSwitch.clickButton.MouseButton1Click:Connect(function()
    toggleNoclip()
end)

airJumpSwitch.clickButton.MouseButton1Click:Connect(function()
    toggleAirJump()
end)

invisibleSwitch.clickButton.MouseButton1Click:Connect(function()
    toggleInvisible()
end)

espSwitch.clickButton.MouseButton1Click:Connect(function()
    toggleESP()
end)

antiKnockbackSwitch.clickButton.MouseButton1Click:Connect(function()
    toggleAntiKnockback()
end)

resetIgnoredButton.MouseButton1Click:Connect(function()
    resetIgnoredPlayers()
end)

closeButton.MouseButton1Click:Connect(function()
    confirmFrame.Visible = true
end)

confirmYes.MouseButton1Click:Connect(function()
    unloadGUI()
end)

confirmNo.MouseButton1Click:Connect(function()
    confirmFrame.Visible = false
end)

-- Key Press
UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    
    if input.KeyCode == Enum.KeyCode.X then
        if currentTarget and lockEnabled then
            ignoredPlayers[currentTarget.UserId] = true
            
            if currentHighlight then
                currentHighlight:Destroy()
                currentHighlight = nil
            end
            
            currentTarget = nil
            updateStatus()
        end
    end
end)

-- Air Jump
UserInputService.JumpRequest:Connect(function()
    if airJumpEnabled and player.Character then
        local humanoid = player.Character:FindFirstChild("Humanoid")
        if humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)

-- Character Respawn
player.CharacterAdded:Connect(function(character)
    if noclipEnabled then
        task.wait(0.1)
        if noclipConnection then
            noclipConnection:Disconnect()
        end
        noclipConnection = RunService.Stepped:Connect(function()
            if player.Character then
                for _, part in pairs(player.Character:GetDescendants()) do
                    if part:IsA("BasePart") and part.CanCollide then
                        part.CanCollide = false
                    end
                end
            end
        end)
    end
    
    if airJumpEnabled then
        task.wait(0.1)
        local humanoid = character:WaitForChild("Humanoid")
        humanoid.StateChanged:Connect(function(oldState, newState)
            if newState == Enum.HumanoidStateType.Jumping and airJumpEnabled then
                task.wait()
                humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
            end
        end)
    end
    
    if invisibleEnabled then
        task.wait(0.1)
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Transparency = 1
            elseif part:IsA("Decal") or part:IsA("Texture") then
                part.Transparency = 1
            end
        end
        
        for _, accessory in pairs(character:GetChildren()) do
            if accessory:IsA("Accessory") then
                local handle = accessory:FindFirstChild("Handle")
                if handle then
                    handle.Transparency = 1
                end
            end
        end
    end
    
    if antiKnockbackEnabled then
        task.wait(0.1)
        if antiKnockbackConnection then
            antiKnockbackConnection:Disconnect()
        end
        
        antiKnockbackConnection = RunService.Heartbeat:Connect(function()
            if antiKnockbackEnabled and player.Character then
                local hrp = player.Character:FindFirstChild("HumanoidRootPart")
                if hrp then
                    local vel = hrp.AssemblyLinearVelocity
                    if vel.Magnitude > 50 then
                        hrp.AssemblyLinearVelocity = Vector3.new(vel.X * 0.1, vel.Y * 0.5, vel.Z * 0.1)
                    end
                end
            end
        end)
    end
end)

-- Main Loop
RunService.RenderStepped:Connect(function()
    if not lockEnabled then return end
    
    local previousTarget = currentTarget
    
    if not currentTarget or not currentTarget.Character or not currentTarget.Character:FindFirstChild("HumanoidRootPart") then
        currentTarget = findNearestPlayer()
    end
    
    local nearest = findNearestPlayer()
    if nearest and nearest ~= currentTarget then
        local currentDist = currentTarget and getDistance(currentTarget) or math.huge
        local nearestDist = getDistance(nearest)
        
        if nearestDist < currentDist then
            currentTarget = nearest
        end
    end
    
    if currentTarget ~= previousTarget then
        updateHighlight(currentTarget)
        updateStatus()
    end
    
    lockOntoTarget()
end)

-- Cleanup
Players.PlayerRemoving:Connect(function(removedPlayer)
    ignoredPlayers[removedPlayer.UserId] = nil
    removeESP(removedPlayer)
end)

print("⚡ Awaaga GUI Loaded!")
print("X - Ignore Target")
